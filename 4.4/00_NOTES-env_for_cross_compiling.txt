
Targets: Android 4.0.x ICS and >= 4.1.x JB (Linux kernel version 3.x.y)
Build platform: android-ndk-r8d/r8e on Linux Ubuntu 12.04.x x86

Usage of the bash shell is assumed.

Go to the /opt directory, extract android-ndk-r8e-linux-x86.tar.bz2
and create a symbolic link:
cd /opt
wget http://dl.google.com/android/ndk/android-ndk-r8e-linux-x86.tar.bz2
tar xf android-ndk-r8e-linux-x86.tar.bz2
ln -sf android-ndk-r8e android-ndk

Then set some environment variables for cross-compiling, as in the following.

For Android-ARM platforms:
--------------------------

export NDK_BASE=/opt/android-ndk
export GCC_VERSION=4.6
export API_LEVEL=14
export NDK_TOOLCHAIN=$NDK_BASE/toolchains/arm-linux-androideabi-$GCC_VERSION/prebuilt/linux-x86
export NDK_SYSROOT=$NDK_BASE/platforms/android-$API_LEVEL/arch-arm
export CC="$NDK_TOOLCHAIN/bin/arm-linux-androideabi-gcc --sysroot=$NDK_SYSROOT"
export CXX="$NDK_TOOLCHAIN/bin/arm-linux-androideabi-g++ --sysroot=$NDK_SYSROOT"
export LD=$NDK_TOOLCHAIN/bin/arm-linux-androideabi-ld
export AR=$NDK_TOOLCHAIN/bin/arm-linux-androideabi-ar
export STRIP=$NDK_TOOLCHAIN/bin/arm-linux-androideabi-strip
export OBJDUMP=$NDK_TOOLCHAIN/bin/arm-linux-androideabi-objdump
export RANLIB=$NDK_TOOLCHAIN/bin/arm-linux-androideabi-ranlib

You may want to use different settings: as an example,
replace "GCC_VERSION=4.6" with "GCC_VERSION=4.4.3"
if you want to cross-compile through gcc 4.4.3 instead of gcc 4.6;
you may also want to change the API_LEVEL according to the set
of versions of Android you want to support: refer to
https://developer.android.com/guide/topics/manifest/uses-sdk-element.html#ApiLevels

In most cases considered here, the build will continue with a "configure"
command such as
./configure --host=arm-linux ...

For Android-x86 platforms:
--------------------------

export NDK_BASE=/opt/android-ndk
export GCC_VERSION=4.4.3
export API_LEVEL=14
export NDK_TOOLCHAIN=$NDK_BASE/toolchains/x86-$GCC_VERSION/prebuilt/linux-x86
export NDK_SYSROOT=$NDK_BASE/platforms/android-$API_LEVEL/arch-x86
export CC="$NDK_TOOLCHAIN/bin/i686-linux-android-gcc --sysroot=$NDK_SYSROOT"
export CXX="$NDK_TOOLCHAIN/bin/i686-linux-android-g++ --sysroot=$NDK_SYSROOT"
export LD=$NDK_TOOLCHAIN/bin/i686-linux-android-ld
export AR=$NDK_TOOLCHAIN/bin/i686-linux-android-ar
export STRIP=$NDK_TOOLCHAIN/bin/i686-linux-android-strip
export OBJDUMP=$NDK_TOOLCHAIN/bin/i686-linux-android-objdump
export RANLIB=$NDK_TOOLCHAIN/bin/i686-linux-android-ranlib

./configure --host=i686-linux ...

